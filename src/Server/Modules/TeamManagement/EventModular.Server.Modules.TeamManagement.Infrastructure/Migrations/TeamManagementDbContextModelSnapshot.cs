// <auto-generated />
using System;
using EventModular.Server.Modules.TeamManagement.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventModular.Server.Modules.TeamManagement.Infrastructure.Migrations
{
    [DbContext(typeof(TeamManagementDbContext))]
    partial class TeamManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EventModular.Server.Modules.TeamManagement.Domain.Entities.OrganizerRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastModificationById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModificationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("OrganizerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrganizerRole", "teamManagement");
                });

            modelBuilder.Entity("EventModular.Server.Modules.TeamManagement.Domain.Entities.OrganizerRoleLocalization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LastModificationById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModificationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("OrganizerRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizerRoleId");

                    b.ToTable("OrganizerRoleLocalization", "localization");
                });

            modelBuilder.Entity("EventModular.Server.Modules.TeamManagement.Domain.Entities.OrganizerRolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastModificationById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModificationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("OrganizerRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PermissionKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizerRoleId");

                    b.ToTable("OrganizerRolePermission", "teamManagement");
                });

            modelBuilder.Entity("EventModular.Server.Modules.TeamManagement.Domain.Entities.OrganizerRoleLocalization", b =>
                {
                    b.HasOne("EventModular.Server.Modules.TeamManagement.Domain.Entities.OrganizerRole", "OrganizerRole")
                        .WithMany("Localizations")
                        .HasForeignKey("OrganizerRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrganizerRole");
                });

            modelBuilder.Entity("EventModular.Server.Modules.TeamManagement.Domain.Entities.OrganizerRolePermission", b =>
                {
                    b.HasOne("EventModular.Server.Modules.TeamManagement.Domain.Entities.OrganizerRole", "OrganizerRole")
                        .WithMany("Permissions")
                        .HasForeignKey("OrganizerRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrganizerRole");
                });

            modelBuilder.Entity("EventModular.Server.Modules.TeamManagement.Domain.Entities.OrganizerRole", b =>
                {
                    b.Navigation("Localizations");

                    b.Navigation("Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
